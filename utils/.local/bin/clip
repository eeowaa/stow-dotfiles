#!/bin/sh
## Wrapper around various system-specific clipboard commands
## Requires: perl
## Usage: clip [-t] [-i | -o]

# Use a tmux paste buffer instead of the system clipboard
unset tmux
[ "X$1" = 'X-t' ] && {
    tmux=yes
    shift
}

# Determine whether to copy or paste
case $1 in
-o) mode=paste ;;
-i) mode=copy ;;
*)  if [ -t 0 ]
    then mode=paste
    else mode=copy
    fi ;;
esac

[ "X$tmux" = X ] || {
    case $mode in
    paste) tmux paste-buffer -d ;;
    copy)  perl -pe 'chomp if eof' | tmux load-buffer - ;;
    esac
    exit
}

case `uname -s` in
Darwin)
    case $mode in
    paste) pbpaste ;;
    copy)  perl -pe 'chomp if eof' | pbcopy ;;
    esac
    exit ;;
CYGWIN_NT*|MINGW*|MSYS*)
    case $mode in
    paste) cat /dev/clipboard ;;
    copy)  perl -pe 'chomp if eof' >/dev/clipboard ;;
    esac
    exit ;;
esac

# WSL
case `uname -r` in
*-Microsoft|*-microsoft-standard-WSL2)
    case $mode in
    paste) powershell.exe -noprofile -command Get-Clipboard | tr -d '\r' | perl -pe 'chomp if eof' ;;
    copy)  perl -pe 'chomp if eof' | clip.exe ;;
    esac
    exit ;;
esac

# For when there is no graphical display
fsclip() {
    : "${XDG_RUNTIME_DIR:=/run/user/`id -u`}"
    if [ -d "$XDG_RUNTIME_DIR" ]
    then
        # $XDG_RUNTIME_DIR is a per-user temporary system directory, typically
        # /run/user/<id>. This is perfect for an ephemeral per-user clipboard,
        # but not something that we want to create if it doesn't already exist.
        clipdir=$XDG_RUNTIME_DIR
    else
        # If we don't have $XDG_RUNTIME_DIR, the next best thing is a private
        # subdirectory in $TMPDIR -- this is what systemd does.
        clipdir=${TMPDIR:-/tmp}/`id -un`-private
        mkdir -m 700 "$clipdir"
    fi
    clipfile=$clipdir/clip
    case $mode in
    paste) [ -f "$clipfile" ] && cat "$clipfile" ;;
    copy)  perl -pe 'chomp if eof' >"$clipfile" ;;
    esac
    exit
}

if which xclip >/dev/null; then
    [ "X$DISPLAY" = X ] && fsclip
    case $mode in
    paste) xclip -o -selection clipboard ;;
    copy)  perl -pe 'chomp if eof' | xclip -i -selection clipboard ;;
    esac
elif which xsel >/dev/null; then
    [ "X$DISPLAY" = X ] && fsclip
    case $mode in
    paste) xsel -o --clipboard ;;
    copy)  perl -pe 'chomp if eof' | xsel -i --clipboard ;;
    esac
elif which wl-copy >/dev/null; then
    [ "X$WAYLAND_DISPLAY" = X ] && fsclip
    case $mode in
    paste) wl-paste -n ;;
    copy)  perl -pe 'chomp if eof' | wl-copy ;;
    esac
elif which termux-clipboard-get >/dev/null; then
    case $mode in
    paste) termux-clipboard-set ;;
    copy)  perl -pe 'chomp if eof' | termux-clipboard-get ;;
    esac
else
    exit 1
fi
