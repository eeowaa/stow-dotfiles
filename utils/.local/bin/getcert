#!/bin/sh
## Obtain and print a PEM-formatted TLS certificate from a specific host:port
## Requires: openssl

# Parse command line arguments
progname=`basename "$0"`
usage="Usage: $progname [-h | --help] HOST:PORT [HOST:PORT]..."
die() {
    [ $# -eq 0 ] || echo >&2 "$progname: $*"
    echo >&2 "$usage"
    exit 1
}
for arg
do
    case $arg in
    -h|--help)
        echo "$usage"
        exit $? ;;
    *)
        host=${arg%:*} port=${arg#*:}
        expr "X$host" : 'X.*:' >/dev/null &&
            die "extra colon(s) in argument: $arg"
        if [ "X$host" = "X$port" ] || [ "X$port" = X ]
        then
            die "missing port for host: $host"
        fi ;;
    esac
done
[ $# -eq 0 ] && die

# Obtain TLS certificate for each host:port argument
for arg
do
    [ $# -gt 1 ] && echo "$arg"
    openssl s_client -connect "$arg" -showcerts </dev/null | awk '

# Start of a new certificate within the chain
$1 ~ /^[0-9]+$/ && $2 ~ /^s:/ {

    # Get index and subject
    n = $1
    subject[n] = substr($0, index($0, "s:") + 2) # s:(...)

    # Get certificate issuer
    do {
        getline
    } while ($1 !~ /^i:/)
    issuer[n] = substr($0, index($0, "i:") + 2) # i:(...)

    # 1. Append subject and issuer to create a unique ID for this cert
    # 2. Map the index of the certificate to its unique ID
    certindex[subject[n] issuer[n]] = n

    # Get start delimiter of PEM formatted data
    do {
        getline
    } while ($0 != "-----BEGIN CERTIFICATE-----")
    pemdata[n] = $0

    # Get PEM formatted data up to and including end delimiter
    do {
        getline
        pemdata[n] = pemdata[n] "\n" $0
    } while ($0 != "-----END CERTIFICATE-----")
}
# Determine which certificate belongs to the target server
$0 == "Server certificate" {

    # Get subject of server certificate
    getline
    if (!/^subject=/) exit 1
    id = substr($0, index($0, "=") + 1)

    # Get issuer of server certificate
    getline
    if (!/^issuer=/) exit 1
    id = id substr($0, index($0, "=") + 1)

    # Print the certificate (i.e. the PEM formatted data)
    n = certindex[id]
    print pemdata[n]
    exit
}'
done
