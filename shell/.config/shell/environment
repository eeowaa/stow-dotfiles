if [ "$DEBUG" ]
then if [ "$BASH_VERSION" ]
     then echo "Sourcing: $BASH_SOURCE"
     elif [ "$ZSH_VERSION" ]
     then echo "Sourcing: ${(%):-%N}"
     else echo "Sourcing: shell environment"
     fi >&2
fi

# Use Emacs-style line editing
set +o vi
set -o emacs

# Terminal settings
stty -ixon

# Aliases (OK to use in POSIX shells for interactive use)
alias p='pwd'
alias j='jobs'
alias e='echo $?'
alias grep='grep --color=auto'
alias ls='ls --color=auto --group-directories-first'
alias ll='ls -l'

# Functions for interactive use
f() {
    cd ${1+"$@"} && ls
}
g() {
    # URL-encoded query string
    local query='q='`echo "$*" | sed 's/ /%20/g'`

    # DuckDuckGo-specific query parameters
    # See <https://duckduckgo.com/params>
    query="$query&kl=us-en"        # Region = US English
    query="$query&k1=-1"           # Advertisements = OFF
    query="$query&kam=google-maps" # Directions source = Google Maps

    # Perform the query
    $BROWSER "https://duckduckgo.com?$query"
}
up() {
    [ $# -eq 0 ] && {
        cd ..
        return
    }
    expr "X$1" : 'X[0-9]\{1,\}$' >/dev/null 2>&1 || return 1
    local count=$1 startdir=`pwd`
    while [ $count -gt 0 ]; do
        cd .. || break
        count=`expr $count - 1`
    done
    OLDPWD=$startdir
}
cdsed() {
    local dest=`pwd | sed "s|$1|$2|"`
    cd "$dest"
    pwd
}
fixpath() {
    # Remove duplicate entries from `PATH'
    PATH=`echo "$PATH" | tr : '\n' | awk '
    {
        if ($0 in y) {
            print "Removing duplicate PATH entry:", $0 > "/dev/stderr"
        } else {
            y[$0] = 1
            x[++n] = $0
        }
    }
    END {
        for (i = 1; i <= n - 1; ++i)
            printf x[i] ":"
        print x[n]
    }'` export PATH
}

# Source each environment script
for environ in "$HOME/.environ.d"/*.sh
do if [ "$DEBUG" ]; then echo >&2 "Sourcing: $environ"; fi
   . "$environ"
done

# vim: set syntax=sh:
